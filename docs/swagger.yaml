basePath: /api/v1
definitions:
  go-template_internal_models.ChangePasswordRequest:
    properties:
      confirm_password:
        example: NewSecurePassword456
        type: string
      current_password:
        example: OldPassword123
        type: string
      new_password:
        example: NewSecurePassword456
        maxLength: 128
        minLength: 8
        type: string
    required:
    - confirm_password
    - current_password
    - new_password
    type: object
  go-template_internal_models.CreateUserRequest:
    properties:
      email:
        example: john@example.com
        maxLength: 255
        type: string
      first_name:
        example: John
        maxLength: 50
        type: string
      last_name:
        example: Doe
        maxLength: 50
        type: string
      password:
        example: SecurePass123
        maxLength: 128
        minLength: 8
        type: string
      username:
        example: johndoe
        maxLength: 30
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  go-template_internal_models.UpdateUserRequest:
    properties:
      bio:
        example: Software developer and coffee enthusiast
        maxLength: 500
        type: string
      email:
        example: jane@example.com
        maxLength: 255
        type: string
      first_name:
        example: Jane
        maxLength: 50
        type: string
      last_name:
        example: Smith
        maxLength: 50
        type: string
      location:
        example: San Francisco, CA
        maxLength: 100
        type: string
      username:
        example: janedoe
        maxLength: 30
        minLength: 3
        type: string
      website:
        example: https://johndoe.dev
        maxLength: 255
        type: string
    type: object
  go-template_internal_models.UserListResponse:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
      users:
        items:
          $ref: '#/definitions/go-template_internal_models.UserResponse'
        type: array
    type: object
  go-template_internal_models.UserProfileResponse:
    properties:
      avatar:
        type: string
      bio:
        type: string
      created_at:
        type: string
      full_name:
        type: string
      id:
        type: string
      is_verified:
        type: boolean
      last_login_at:
        type: string
      location:
        type: string
      username:
        type: string
      website:
        type: string
    type: object
  go-template_internal_models.UserResponse:
    properties:
      avatar:
        type: string
      bio:
        type: string
      created_at:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      email_verified_at:
        type: string
      first_name:
        type: string
      full_name:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_verified:
        type: boolean
      last_login_at:
        type: string
      last_name:
        type: string
      location:
        type: string
      login_count:
        type: integer
      preferences:
        additionalProperties: true
        type: object
      roles:
        items:
          type: string
        type: array
      updated_at:
        type: string
      username:
        type: string
      website:
        type: string
    type: object
  go-template_internal_shared_response.ErrorInfo:
    properties:
      code:
        type: string
      details: {}
      message:
        type: string
    type: object
  go-template_internal_shared_response.Meta:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  go-template_internal_shared_response.Response:
    properties:
      data: {}
      error:
        $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
      message:
        type: string
      meta:
        $ref: '#/definitions/go-template_internal_shared_response.Meta'
      success:
        type: boolean
      timestamp:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: https://example.com/support
  description: A robust, scalable Go API template with Users module, dependency container
    architecture, MongoDB persistence, Redis caching, and comprehensive documentation.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: https://example.com/terms/
  title: Go API Template
  version: "1.0"
paths:
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Get all users with pagination and filtering options
      parameters:
      - default: 1
        description: Page number
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 20
        description: Items per page
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - description: Search in username, email, first_name, last_name
        in: query
        name: search
        type: string
      - description: Filter by role
        enum:
        - user
        - admin
        - moderator
        in: query
        name: role
        type: string
      - description: Filter by active status
        in: query
        name: is_active
        type: boolean
      - default: created_at
        description: Sort field
        enum:
        - created_at
        - updated_at
        - username
        - email
        - first_name
        - last_name
        - login_count
        in: query
        name: sort_by
        type: string
      - default: desc
        description: Sort direction
        enum:
        - asc
        - desc
        in: query
        name: sort_dir
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of users with pagination metadata
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/go-template_internal_models.UserListResponse'
                meta:
                  $ref: '#/definitions/go-template_internal_shared_response.Meta'
              type: object
        "400":
          description: Invalid query parameters
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
      summary: Get all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user account with validation
      parameters:
      - description: User creation data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/go-template_internal_models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/go-template_internal_models.UserResponse'
              type: object
        "400":
          description: Validation error or invalid request body
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
        "409":
          description: Username or email already exists
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
      summary: Create a new user
      tags:
      - Users
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Soft delete a user account (user data is preserved but marked as
        deleted)
      parameters:
      - description: User ID
        example: 507f1f77bcf86cd799439011
        format: objectid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            $ref: '#/definitions/go-template_internal_shared_response.Response'
        "400":
          description: Invalid user ID format
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
        "404":
          description: User not found
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
      summary: Delete user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get a specific user by their unique identifier
      parameters:
      - description: User ID
        example: 507f1f77bcf86cd799439011
        format: objectid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User information
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/go-template_internal_models.UserResponse'
              type: object
        "400":
          description: Invalid user ID format
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
        "404":
          description: User not found
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
      summary: Get user by ID
      tags:
      - Users
    patch:
      consumes:
      - application/json
      description: Partially update user information with validation (only provided
        fields are updated)
      parameters:
      - description: User ID
        example: 507f1f77bcf86cd799439011
        format: objectid
        in: path
        name: id
        required: true
        type: string
      - description: User update data (partial)
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/go-template_internal_models.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/go-template_internal_models.UserResponse'
              type: object
        "400":
          description: Validation error or invalid request body
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
        "404":
          description: User not found
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
        "409":
          description: Username or email already exists
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
      summary: Update user
      tags:
      - Users
  /api/v1/users/{id}/password:
    patch:
      consumes:
      - application/json
      description: Change a user's password with current password verification
      parameters:
      - description: User ID
        example: 507f1f77bcf86cd799439011
        format: objectid
        in: path
        name: id
        required: true
        type: string
      - description: Password change data
        in: body
        name: password
        required: true
        schema:
          $ref: '#/definitions/go-template_internal_models.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password changed successfully
          schema:
            $ref: '#/definitions/go-template_internal_shared_response.Response'
        "400":
          description: Validation error or incorrect current password
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
        "404":
          description: User not found
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
      summary: Change user password
      tags:
      - Users
  /api/v1/users/{id}/profile:
    get:
      consumes:
      - application/json
      description: Get a user's public profile information (limited data for privacy)
      parameters:
      - description: User ID
        example: 507f1f77bcf86cd799439011
        format: objectid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User public profile
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/go-template_internal_models.UserProfileResponse'
              type: object
        "400":
          description: Invalid user ID format
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
        "404":
          description: User not found
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
      summary: Get user public profile
      tags:
      - Users
  /api/v1/users/{id}/verify:
    patch:
      consumes:
      - application/json
      description: Mark a user's email as verified
      parameters:
      - description: User ID
        example: 507f1f77bcf86cd799439011
        format: objectid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User verified successfully
          schema:
            $ref: '#/definitions/go-template_internal_shared_response.Response'
        "400":
          description: User already verified or invalid ID
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
        "404":
          description: User not found
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
      summary: Verify user email
      tags:
      - Users
  /api/v1/users/search:
    get:
      consumes:
      - application/json
      description: Search users by username, email, first name, or last name
      parameters:
      - description: Search query
        example: john
        in: query
        maxLength: 100
        minLength: 1
        name: q
        required: true
        type: string
      - default: 10
        description: Maximum results
        in: query
        maximum: 50
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of matching user profiles
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/go-template_internal_models.UserProfileResponse'
                  type: array
              type: object
        "400":
          description: Missing or invalid search query
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
      summary: Search users
      tags:
      - Users
  /api/v1/users/stats:
    get:
      consumes:
      - application/json
      description: Get aggregated user statistics including total users, active users,
        verified users, etc.
      produces:
      - application/json
      responses:
        "200":
          description: User statistics
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/go-template_internal_shared_response.Response'
            - properties:
                error:
                  $ref: '#/definitions/go-template_internal_shared_response.ErrorInfo'
              type: object
      summary: Get user statistics
      tags:
      - Users
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: User management operations including CRUD, search, and account management
  name: Users
- description: System health and configuration endpoints
  name: System
